import Config

get_env! = fn env_name, default ->
  case System.fetch_env(env_name) do
    {:ok, env} ->
      env

    :error when is_nil(default) ->
      raise(
        ArgumentError,
        ~s(could not fetch environment variable "#{env_name}" because it is not set)
      )

    :error ->
      default
  end
end

config :moqueca_payment, env: Mix.env()

name = "postgres"
pass = "1234"
host = "127.0.0.1"
database = "moquecadb"

# Configure your database
config :moqueca_payment, MoquecaPayment.Repo,
  username: name,
  password: pass,
  hostname: host,
  database: database

config :moqueca_payment, ecto_repos: [MoquecaPayment.Repo]

# config :logger,
#   handle_otp_reports: true,
#   handle_sasl_reports: true

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :moqueca_payment, MoquecaPaymentWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "z4PBQeqFBRZhzSXN166yL8NrwbxehB5wIsytP0GYz3CnEMypesu1+t2/5ipl9OXW",
  watchers: [
    # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :moqueca_payment, MoquecaPaymentWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/moqueca_payment_web/(live|views)/.*(ex)$",
      ~r"lib/moqueca_payment_web/templates/.*(eex)$"
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
